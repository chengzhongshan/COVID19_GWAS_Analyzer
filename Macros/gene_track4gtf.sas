%macro gene_track4gtf(
gtf_dsd=FM.GTF_HG19,/*the input gtf dsd can be generated by using the macro xx*/
gtf_chr_var=chr, /*chr var in gtf*/
gtf_st_var=st,/*start position var in gtf*/
gtf_end_var=end,/*end position var in gtf*/
chr_value=11, /*chromosome value for subset gtf*/
minst=119089629, /*start position for target region*/
maxend=120320656, /*end position for target region*/
genevar=grp,/*gene variable name in the gtf dsd*/
perlrgx4gene=.,/*perl regular expression to filter genes overlapped with target region*/
outdsd=out,  /*output dsd containing these variables for the macro  Lattice_gbed_over_bed_track
that can be used other purpose later; there would be a case when the final plot needs to be
optimized by using revised parameters rather than the defalt values for these parameters!*/
yaxis_label=Annotation,/*The value will be used to label the y-axis*/
linethickness=20, /*line thinkness for gene bed regions*/
track_width=800, /*Final figure width*/
track_height=400,/*Final figure height*/
dist2st_and_end=0,/*Extend the start and end position for the x-axis*/
dotsize=10,/*Scatter plot marker symbol size, and the default marker is circlefilled dot*/
scattermarker_symbol=circlefilled,/*Assign specific marker symbol, such as circlefilled, circle, dot, squarefilled, or square, for scatter plot;
Note the size of the designated marker symbol will be defined by the macro variable dotsize*/ 
debug=0,/*keep intermediate data sets for debugging if its value is 1*/
add_grp_anno=1, /*This will add group names, such as gene labels, to each member of grp_var*/
grp_font_size=8, /*font size for gene labels in the lower gene track*/
grp_anno_font_type=italic, /*other type: normal; specifically designed for the gene label font type*/
shift_text_yval=-0.25, /*in terms of gene track labels, add positive or negative vale, ranging from 0 to 1, 
to liftup or lower text labels on the y axis; the default value is -0.25 to put gene lable under gene tracks;
Change it with the macro var pct4neg_y! Provide very large or small values, such as 9999 or -9999 to remove test labels for genes!*/
amplify_scatterheader_pos=1, /*Provide value 1 to the macro var when the max value for each scatter plot is too large, 
the header position for it should be amplified automatically by the macro*/
yaxis_offset4min=0.05, /*provide 0-1 value or auto to offset the min of the yaxis*/
yaxis_offset4max=0.05, /*provide 0-1 value or auto or to offset the max of the yaxis*/
yoffset4max_drawmarkersontop=0.15,/*If draw scatterplot marker labels on the top of track, 
this fixed value will be used instead of yaxis_offset4max!*/
yaxis_auto_ticks=0,/*Provide value 1 to let SAS automatically reduce the number of ticks, which may be useful when non-integer ticks are required for y-axis;
otherwise, only integer ticks will be used to label ticks! However, sometimes this will lead to abnomal yaxis ticks generated!*/
draw_grid4y=0, /*Assign value 1 to draw grid for y axis; default value is 0 for not drawing y grid*/
xaxis_offset4min=0.04, /*provide 0-1 value or auto  to offset the min of the xaxis*/
xaxis_offset4max=0.04, /*provide 0-1 value or auto to offset the max of the xaxis*/
fig_fmt=png, /*output figure formats: svg, png, jpg, and others*/
refline_thickness=5,/*Use thick refline to separate different tracks*/
refline_color=lightgray,/*Color for reflines*/
pct4neg_y=2, /*the most often used value is 1, and if the value is too large, it will affect the 
 y-axis tick labels by leading to very few y-axis ticks in the final figure!
 So if the above occurs, it is feasible to reduce the value of pct4neg_y or increase
 the value of macro variable track_height inaccordingly.
 compacting the bed track y values by increasing the scatterplot scale, 
 which can reduce the bed trace spaces; It seems that two-fold increasement
 leads to better ticks for different tracks!
 Use value >1 will increase the gene tract, while value < 1 will reduce it!
 Note: when there are only 1 or 2 scatterplots, it is better to provide value = 0.5;
 Modify this parameter with the parameter shift_text_yval to adjust gene label!
 Typically, when there are more scatterplots, it is necessary to increase the value of pct4neg_y accordingly;
 If there are only <4 scatterplots, the value would be usually set as 1 or 2;*/
NotDrawScatterPlot=0,/*This filter will be useful when it is only wanted to draw the bottom bed track
without of the scatterplot; this is the idea solution to draw gene track only!*/ 
offsety=0.05,/*If NotDrowScatterPlot=1, this value will be subtracted from negative gene group value;
This enables the upper and lower part have enough blank space for gene track*/
makedotheatmap=0,/*use colormap to draw dots in scatterplot instead of the discretemap;
Note: if makedotheatmap=1, the scatterplot will not use the discretemap mode based on
the negative and postive values of lattice_subgrp_var to color dots in scatterplot
Note: if makedotheatmap=1, autolegend will be canceled internally!*/
color_resp_var=,/*Use the variable to draw colormap of dots in scatterplots with colors
supplied by a later macro variable dataContrastCols that are specifically designated for 
scatterplot dots but not other tracks under the scatter plots, such as gene tracks;.
previously if the macro var is empty, the default var would be the same as that of yval_var;
Later it is updated to enable the macro to use lattice_subgrp_var but not yval_var when 
this color_resp_var is empty! A later macro variable dataContrastCols will be used 
to supply colors for different groups of the variable solely for coloring scatterplot dots!*/
fixedcols4tracksunderscatter=cyan blue, /*when color_resp_var is not empty, all tracks under scatterplots will be fixed with 
two different colors, including cyan and blue, represented by the macro var fixedcols4tracksunderscatter!*/
color_resp_grpdsd=,/*this dataset contains two columns, including &color_resp_var and the fixed
variable numgrp4color_resp,which are corresponding to the unique char color_resp_var and 
its associated numeric var that would be sorted to order these char color_resp_var in the final figure legend!
Note: for color_resp_var not included in the dataset, they will be asigned as Others;
Custom colors with the same number of unique color_resp_var for these groups can be provided to 
a latter macro variable dataContrastCols*/
makeheatmapdotintooneline=0,/*This will make all dots have the same yaxis value but have different colors 
based on its real value in the heatmap plot; To keep the original dot y axis value, assign 0 to the macro var
This would be handy when there are multiple subgrps represented by different y-axis values! By modifying
the y-axis values for these subgrps, the macro can plot them separately in each subtrack!*/
dot_yvalue4heatmap_at_oneline=1.5,/*When drawing dot in one line for heatmap, sometimes the arbitrary y value assigned to each dot
may not be optimum, it is advicible to evaluate the initially generated plot and update the value of this macro variable*/
drawdotintooneline_if_totsc_gt=10,/*When there are too many scatter groups,  let the macro change the macro var makeheatmapdotintooneline=1*/
var4label_scatterplot_dots=,/*Make sure the variable name is not grp, which is a fixed var used by the macro for other purpose;
Whenever  makeheatmapdotintooneline=1 or 0, it is possible to use values of the var4label_scatterplot_dots to
label specific scatterplot dots based on the customization of the variable predifined by users for the input data set; 
default is empty; provide a variable that include non-empty strings for specific dots in the scatterplots;*/
label_dots_once_on_top=1,/*Put value 1 to label each unique label once on top of scatterplot;
provide 0 for labeling selected dots inside scatterplots;
The script will enlarge the macro var yaxis_offset4max to be 0.1!*/
dist_pct_to_cluster_pos=0.02,/*In terms of labels for top SNPs, use the input pct to calcuate dist based on the distance 
betweent the first label to the last label and define labels into cluster if they are too close to each other if their distance is less than pct_of_total_dist*/
fc2distant_close_labels=3,/*In terms of labels for top SNPs, increase the distance among close labels by input fold change
default value 3 would be good for most situations! Note: this parameter is also used to amplify the space for separating
adjacent SNP labels when adjusting spaces using adj_spaces_among_top_snps=1 with the default setting:
sep4tgt_pos=&fc2distant_close_labels*0.1*(&max_x-&min_x+1)/total_SNPs
Whent the above default distance does not work well, it is suggested to increase or reduce the value of fc2distant_close_labels*/
pct2adj4dencluster=2,/*Input value can be ranging from 0.0001 to 10 or even higher value!
For SNP labels on the top, please try to use this parameter, which only works when 
there are less than or equal to 3 top SNPs if track_width <= 500, or 4 top SNPs if track_width between 500 and 800, or 5 top SNPs if 
track_width >=800, otherwise, this parameter will be excluded and even step will be used to separate them on the top!*/
reflinecolor4selecteddots=gray,/*asign color for the vertical reference lines for userselected dots*/
snp_line_split_ratio=0.99,/*split the vertical reference lines into two parts based on the ratio, with the 
smaller part drawn from the end of point of the larger part to the adjusted position of each snp!*/
text_rotate_angle=90, /*Angle to rotate text labels for these selected dots by users*/
auto_rotate2zero=0, /*supply value 1 when less than 3 text labels, it is good to automatically set the text_rotate_angel=0*/
adj_spaces_among_top_snps=1,/*Provide value 1 to adjust spaces among top SNP labels; otherwise, give value 0 to not 
adjust top SNPs labels if these labels are rotated 90 degree, which is helpful when the space adjusted labels are not pretty*/
Yoffset4textlabels=2.5, /*Move up the text labels for target SNPs in specific fold; the default value 2.5 fold works for most cases;
Note: the value of this variable will be automatically changed to enable the target SNP are labeled properly on the top of the figure;
So you may notice that when there is only one SNP for labeling on the top, adjust this value may not efficient, and you may go to 
the line 1150 of this macro to reduce or increase the ratio of 800/&track_height to adjust the SNP label manually!*/
font_size4textlabels=10,/*Font size for these text labels*/
move_right_genetxt_pct=0.08,/*When the right most genes are too close to the right boudary, it is necessary to reduce its x-axis position
using the designated pct based on the whole window size that will be automatically calcuated by the macro*/
mk_fake_axis_with_updated_func=1, /*The new func make the xaxis more compacted between gene tracks and scatter plots;*/
sameyaxis4scatter=1,/*Make the same y-axis for scatterplots*/ 
maxyvalue4truncat=30,/*Asign yaxis_value >maxyvalue4trancat as the designated value of maxyvalue4trancat*/ 
adjval4header=-0.5, /*In terms of header of each subscatterplot, provide postive value to move up scatter group header by the input value*/
ordered_sc_grpnames= ,/*Labels for each scatter plot from down to up in order; Use _ to replace blank space within each name and all
_ will be changed into black space by the macro at the end*/
xaxis_label=%nrstr(Position (bp) on chromosome &chr_name), /*The macro var &chr_name will be unquoted after resolved*/        
xaxis_viewmin=,/*arbitrary xaxis min value to show the figure, and it requires to work with thresholdmin=0*/
xaxis_viewmax=,/*arbitrary xaxis max vale to show the figure, and it requires to go along with thresholdmax=0*/
rm_gene_legend=1,/*Remove redundant colorful gene legend*/
scatterdotcols=green orange, /*set colors for the beta directions 
(negative and positve values) in scatterplots*/            
dataContrastCols=%str()
/*Note: these colors will be used for the scatterplot and gene track together when color_resp_var is a char var, so it is difficult control;
%str(darkblue darkgreen darkred darkyellow 
CXFFF000 CXFF7F00 CXFF00FF CXFF0000 CXEAADEA CXE6E8FA CXDB9370 CXDB70DB CXD9D919 CXD8D8BF 
CXCD7F32 CXC0C0C0 CXBC8F8F CXB87333 CXB5A642 CXADEAEA CXA67D3D CXA62A2A CX9F9F5F CX9F5F9F 
CX97694F CX8E236B CX8E2323 CX8C7853 CX8C1717 CX871F78 CX856363 CX855E42 CX70DB93 CX5F9F9F 
CX5C4033 CX545454 CX4F2F4F CX4E2F2F CX32CD32 CX2F4F2F CX238E23 CX236B8E CX23238E CX00FFFF 
CX00FF00 CX0000FF CX000000)*/
/*Note: default is to use %str(), which will apply system colors automatically;
add the following colors separated by blank space if desired,
CXADD8E6 CX98FB98 CXF08080 CX0000FF CXFFF00 CX9F5F9F CXA62A2A CX5F9F9F CX871F78
lightblue lightgreen lightcoral and others for the above!
https://support.sas.com/rnd/base/ods/templateFAQ/Template_colors.html
BLACK #FFFFFF
BLUE #0000FF
YELLOW #FFF000
BLUE VIOLET #9F5F9F
BROWN #A62A2A
CADET BLUE #5F9F9F
DARK BROWN #5C4033
DARK PURPLE #871F78
DUSTY ROSE #856363
GOLD #CD7F32
KHAKI #9F9F5F
NAVY BLUE #23238E
PINK #BC8F8F
SILVER #E6E8FA
TURQUOISE #ADEAEA
RED #FF0000
MAGENTA #FF00FF
BLACK #000000
BRASS #B5A642
BRONZE #8C7853
COPPER #B87333
DARK GREEN #2F4F2F
DARK TAN #97694F
FIREBRICK #8E2323
GREY #C0C0C0
LIME GREEN 32CD32
ORANGE #FF7F00
PLUM #EAADEA
STEEL BLUE #236B8E
VIOLET #4F2F4F
GREEN #00FF00
CYAN #00FFFF
AQUAMARINE #70DB93
BRIGHT GOLD #D9D919
BRONZE II #A67D3D
CORAL #FF7F00
DARK WOOD #855E42
DIM GREY #545454
FOREST GREEN #238E23
INDIAN RED #4E2F2F
MAROON #8E236B
ORCHARD #DB70DB
SCARLET #8C1717
TAN #DB9370
WHEAT #D8D8BF
*/
);
 
%GetGenesExons4LatticeGscatter( 
gtf_dsd=&gtf_dsd, 
chr=&chr_value, 
min_st=&minst, 
max_end=&maxend, 
dist2genes=10000, 
outdsd=exons 
); 

data exons;
set exons;
if prxmatch("/&perlrgx4gene/",&genevar);
run;

%char_grp_to_num_grp(
dsdin=exons,
grp_vars4sort=&genevar,
descending_or_not=0,
dsdout=exons_new,
num_grp_output_name=ngrp
);

data exons_new;
set exons_new;
y=-ngrp;
lattice_subgrp_var=0;
run;

data &outdsd;
set exons_new;
grp=grp;
*when only draw gene tracks, the two variables can be a random integer;
gscatter_grp=-1;
lattice_subgrp=0;
run;

%Lattice_gscatter_over_bed_track(
/*
Note: when makedotheatmap=1, in default, the scatterplot will use lattice_subgrp_var to color dots 
across different scatter groups; User can supply an independent variable represented by the macro variable
color_resp_var to color scatter plot dots but different scattergroups will be applied in a union style!
This macro can also draw mixed CNV and scatter plots upper the gene tracks; 
*/
bed_dsd=&outdsd,/*at least contains 7 variables, including chr_var, st_var, end_var, grp_var, and yval_var;
Too many bed regions (>1000) for the gene track will slow down the macro dramatically;
Note: the macro will change the input bed_dsd when supplying xaxis_viewmin and xaxis_viewmax*/
chr_var=&gtf_chr_var,/*chromosome name for bed regions*/
st_var=&gtf_st_var,	/*start positions for bed regions*/
end_var=&gtf_end_var,/*end positions for bed regions*/
grp_var=&genevar,/*it is specifically designed for genes used by the lower gene track, such as genesymbols for all its bed regions,
and the upper scatterplot tracks do not use it, thus values for data points in the scatterplots can be missing*/
scatter_grp_var=gscatter_grp,/*it is used to separate scatterplot data points into different scatter groups, and its values for 
scatterplot data points and gene bed regions in lower gene track should be positve and negative, respectively;
when only draw gene tracks, ensure the the negative value, such as -1, provided for all bed regions, and 
the macro will automatically separate these genes if they are too close to each other!*/
lattice_subgrp_var=lattice_subgrp,/*specifically designed for scatterplots, its values are used to separate dots in scatterplots 
into different groups and color them based on its yval_var value; when only draw gene tracks, just assign the same
value for all bed regions, which can be 0 or any other numeric or character values, as it will be only enable the 
macro to run successful but will not be used for drawing the final figure!*/
yval_var=y, /*this variable is used to draw y-axis for dots of scatterplots and bed regions of genes*/
yaxis_label=&yaxis_label,/*The value will be used to label the y-axis*/
linethickness=&linethickness, /*line thinkness for gene bed regions*/
track_width=&track_width, /*Final figure width*/
track_height=&track_height,/*Final figure height*/
dist2st_and_end=&dist2st_and_end,/*Extend the start and end position for the x-axis*/
dotsize=&dotsize,/*Scatter plot marker symbol size, and the default marker is circlefilled dot*/
scattermarker_symbol=&scattermarker_symbol,/*Assign specific marker symbol, such as circlefilled, circle, dot, squarefilled, or square, for scatter plot;
Note the size of the designated marker symbol will be defined by the macro variable dotsize*/ 
debug=&debug,/*keep intermediate data sets for debugging if its value is 1*/
add_grp_anno=&add_grp_anno, /*This will add group names, such as gene labels, to each member of grp_var*/
grp_font_size=&grp_font_size, /*font size for gene labels in the lower gene track*/
grp_anno_font_type=&grp_anno_font_type, /*other type: normal; specifically designed for the gene label font type*/
shift_text_yval=&shift_text_yval, /*in terms of gene track labels, add positive or negative vale, ranging from 0 to 1, 
to liftup or lower text labels on the y axis; the default value is -0.25 to put gene lable under gene tracks;
Change it with the macro var pct4neg_y! Provide very large or small values, such as 9999 or -9999 to remove test labels for genes!*/
amplify_scatterheader_pos=&amplify_scatterheader_pos, /*Provide value 1 to the macro var when the max value for each scatter plot is too large, 
the header position for it should be amplified automatically by the macro*/
yaxis_offset4min=&yaxis_offset4min, /*provide 0-1 value or auto to offset the min of the yaxis*/
yaxis_offset4max=&yaxis_offset4max, /*provide 0-1 value or auto or to offset the max of the yaxis*/
yoffset4max_drawmarkersontop=&yoffset4max_drawmarkersontop,/*If draw scatterplot marker labels on the top of track, 
this fixed value will be used instead of yaxis_offset4max!*/
yaxis_auto_ticks=&yaxis_auto_ticks,/*Provide value 1 to let SAS automatically reduce the number of ticks, which may be useful when non-integer ticks are required for y-axis;
otherwise, only integer ticks will be used to label ticks! However, sometimes this will lead to abnomal yaxis ticks generated!*/
draw_grid4y=&draw_grid4y, /*Assign value 1 to draw grid for y axis; default value is 0 for not drawing y grid*/
xaxis_offset4min=&xaxis_offset4min, /*provide 0-1 value or auto  to offset the min of the xaxis*/
xaxis_offset4max=&xaxis_offset4max, /*provide 0-1 value or auto to offset the max of the xaxis*/
fig_fmt=&fig_fmt, /*output figure formats: svg, png, jpg, and others*/
refline_thickness=&refline_thickness,/*Use thick refline to separate different tracks*/
refline_color=&refline_color,/*Color for reflines*/
pct4neg_y=&pct4neg_y, /*the most often used value is 1, and if the value is too large, it will affect the 
 y-axis tick labels by leading to very few y-axis ticks in the final figure!
 So if the above occurs, it is feasible to reduce the value of pct4neg_y or increase
 the value of macro variable track_height inaccordingly.
 compacting the bed track y values by increasing the scatterplot scale, 
 which can reduce the bed trace spaces; It seems that two-fold increasement
 leads to better ticks for different tracks!
 Use value >1 will increase the gene tract, while value < 1 will reduce it!
 Note: when there are only 1 or 2 scatterplots, it is better to provide value = 0.5;
 Modify this parameter with the parameter shift_text_yval to adjust gene label!
 Typically, when there are more scatterplots, it is necessary to increase the value of pct4neg_y accordingly;
 If there are only <4 scatterplots, the value would be usually set as 1 or 2;*/
NotDrawScatterPlot=&NotDrawScatterPlot,/*This filter will be useful when it is only wanted to draw the bottom bed track
without of the scatterplot; this is the idea solution to draw gene track only!*/ 
offsety=&offsety,/*If NotDrowScatterPlot=1, this value will be subtracted from negative gene group value;
This enables the upper and lower part have enough blank space for gene track*/
makedotheatmap=&makedotheatmap,/*use colormap to draw dots in scatterplot instead of the discretemap;
Note: if makedotheatmap=&Note: if makedotheatmap, the scatterplot will not use the discretemap mode based on
the negative and postive values of lattice_subgrp_var to color dots in scatterplot
Note: if makedotheatmap=&Note: if makedotheatmap, autolegend will be canceled internally!*/
color_resp_var=,/*Use the variable to draw colormap of dots in scatterplots with colors
supplied by a later macro variable dataContrastCols that are specifically designated for 
scatterplot dots but not other tracks under the scatter plots, such as gene tracks;.
previously if the macro var is empty, the default var would be the same as that of yval_var;
Later it is updated to enable the macro to use lattice_subgrp_var but not yval_var when 
this color_resp_var is empty! A later macro variable dataContrastCols will be used 
to supply colors for different groups of the variable solely for coloring scatterplot dots!*/
fixedcols4tracksunderscatter=&fixedcols4tracksunderscatter, /*when color_resp_var is not empty, all tracks under scatterplots will be fixed with 
two different colors, including cyan and blue, represented by the macro var fixedcols4tracksunderscatter!*/
color_resp_grpdsd=,/*this dataset contains two columns, including &color_resp_var and the fixed
variable numgrp4color_resp,which are corresponding to the unique char color_resp_var and 
its associated numeric var that would be sorted to order these char color_resp_var in the final figure legend!
Note: for color_resp_var not included in the dataset, they will be asigned as Others;
Custom colors with the same number of unique color_resp_var for these groups can be provided to 
a latter macro variable dataContrastCols*/
makeheatmapdotintooneline=&makeheatmapdotintooneline,/*This will make all dots have the same yaxis value but have different colors 
based on its real value in the heatmap plot; To keep the original dot y axis value, assign 0 to the macro var
This would be handy when there are multiple subgrps represented by different y-axis values! By modifying
the y-axis values for these subgrps, the macro can plot them separately in each subtrack!*/
dot_yvalue4heatmap_at_oneline=&dot_yvalue4heatmap_at_oneline,/*When drawing dot in one line for heatmap, sometimes the arbitrary y value assigned to each dot
may not be optimum, it is advicible to evaluate the initially generated plot and update the value of this macro variable*/
drawdotintooneline_if_totsc_gt=&drawdotintooneline_if_totsc_gt,/*When there are too many scatter groups,  let the macro change the macro var makeheatmapdotintooneline=1*/
var4label_scatterplot_dots=,/*Make sure the variable name is not grp, which is a fixed var used by the macro for other purpose;
Whenever  makeheatmapdotintooneline=&Whenever  makeheatmapdotintooneline, it is possible to use values of the var4label_scatterplot_dots to
label specific scatterplot dots based on the customization of the variable predifined by users for the input data set; 
default is empty; provide a variable that include non-empty strings for specific dots in the scatterplots;*/
label_dots_once_on_top=&label_dots_once_on_top,/*Put value 1 to label each unique label once on top of scatterplot;
provide 0 for labeling selected dots inside scatterplots;
The script will enlarge the macro var yaxis_offset4max to be 0.1!*/
dist_pct_to_cluster_pos=&dist_pct_to_cluster_pos,/*In terms of labels for top SNPs, use the input pct to calcuate dist based on the distance 
betweent the first label to the last label and define labels into cluster if they are too close to each other if their distance is less than pct_of_total_dist*/
fc2distant_close_labels=&fc2distant_close_labels,/*In terms of labels for top SNPs, increase the distance among close labels by input fold change
default value 3 would be good for most situations! Note: this parameter is also used to amplify the space for separating
adjacent SNP labels when adjusting spaces using adj_spaces_among_top_snps=1 with the default setting:
sep4tgt_pos=&fc2distant_close_labels*0.1*(&max_x-&min_x+1)/total_SNPs
Whent the above default distance does not work well, it is suggested to increase or reduce the value of fc2distant_close_labels*/
pct2adj4dencluster=&pct2adj4dencluster,/*Input value can be ranging from 0.0001 to 10 or even higher value!
For SNP labels on the top, please try to use this parameter, which only works when 
there are less than or equal to 3 top SNPs if track_width <=&there are less than or equal to 3 top SNPs if track_width <, or 4 top SNPs if track_width between 500 and 800, or 5 top SNPs if 
track_width >=&track_width >, otherwise, this parameter will be excluded and even step will be used to separate them on the top!*/
reflinecolor4selecteddots=&reflinecolor4selecteddots,/*asign color for the vertical reference lines for userselected dots*/
snp_line_split_ratio=&snp_line_split_ratio,/*split the vertical reference lines into two parts based on the ratio, with the 
smaller part drawn from the end of point of the larger part to the adjusted position of each snp!*/
text_rotate_angle=&text_rotate_angle, /*Angle to rotate text labels for these selected dots by users*/
auto_rotate2zero=&auto_rotate2zero, /*supply value 1 when less than 3 text labels, it is good to automatically set the text_rotate_angel=0*/
adj_spaces_among_top_snps=&adj_spaces_among_top_snps,/*Provide value 1 to adjust spaces among top SNP labels; otherwise, give value 0 to not 
adjust top SNPs labels if these labels are rotated 90 degree, which is helpful when the space adjusted labels are not pretty*/
Yoffset4textlabels=&Yoffset4textlabels, /*Move up the text labels for target SNPs in specific fold; the default value 2.5 fold works for most cases;
Note: the value of this variable will be automatically changed to enable the target SNP are labeled properly on the top of the figure;
So you may notice that when there is only one SNP for labeling on the top, adjust this value may not efficient, and you may go to 
the line 1150 of this macro to reduce or increase the ratio of 800/&track_height to adjust the SNP label manually!*/
font_size4textlabels=&font_size4textlabels,/*Font size for these text labels*/
move_right_genetxt_pct=&move_right_genetxt_pct,/*When the right most genes are too close to the right boudary, it is necessary to reduce its x-axis position
using the designated pct based on the whole window size that will be automatically calcuated by the macro*/
mk_fake_axis_with_updated_func=&mk_fake_axis_with_updated_func, /*The new func make the xaxis more compacted between gene tracks and scatter plots;*/
sameyaxis4scatter=&sameyaxis4scatter,/*Make the same y-axis for scatterplots*/ 
maxyvalue4truncat=&maxyvalue4truncat,/*Asign yaxis_value >maxyvalue4trancat as the designated value of maxyvalue4trancat*/ 
adjval4header=&adjval4header, /*In terms of header of each subscatterplot, provide postive value to move up scatter group header by the input value*/
ordered_sc_grpnames=&ordered_sc_grpnames,/*Labels for each scatter plot from down to up in order; Use _ to replace blank space within each name and all
_ will be changed into black space by the macro at the end*/
xaxis_label=&xaxis_label, /*The macro var &chr_name will be unquoted after resolved*/        
xaxis_viewmin=,/*arbitrary xaxis min value to show the figure, and it requires to work with thresholdmin=0*/
xaxis_viewmax=,/*arbitrary xaxis max vale to show the figure, and it requires to go along with thresholdmax=0*/
rm_gene_legend=&rm_gene_legend,/*Remove redundant colorful gene legend*/
scatterdotcols=&scatterdotcols, /*set colors for the beta directions 
(negative and positve values) in scatterplots*/            
dataContrastCols=&dataContrastCols
/*Note: these colors will be used for the scatterplot and gene track together when color_resp_var is a char var, so it is difficult control;
%str(darkblue darkgreen darkred darkyellow 
CXFFF000 CXFF7F00 CXFF00FF CXFF0000 CXEAADEA CXE6E8FA CXDB9370 CXDB70DB CXD9D919 CXD8D8BF 
CXCD7F32 CXC0C0C0 CXBC8F8F CXB87333 CXB5A642 CXADEAEA CXA67D3D CXA62A2A CX9F9F5F CX9F5F9F 
CX97694F CX8E236B CX8E2323 CX8C7853 CX8C1717 CX871F78 CX856363 CX855E42 CX70DB93 CX5F9F9F 
CX5C4033 CX545454 CX4F2F4F CX4E2F2F CX32CD32 CX2F4F2F CX238E23 CX236B8E CX23238E CX00FFFF 
CX00FF00 CX0000FF CX000000)*/
/*Note: default is to use %str(), which will apply system colors automatically;
add the following colors separated by blank space if desired,
CXADD8E6 CX98FB98 CXF08080 CX0000FF CXFFF00 CX9F5F9F CXA62A2A CX5F9F9F CX871F78
lightblue lightgreen lightcoral and others for the above!
https://support.sas.com/rnd/base/ods/templateFAQ/Template_colors.html
BLACK #FFFFFF
BLUE #0000FF
YELLOW #FFF000
BLUE VIOLET #9F5F9F
BROWN #A62A2A
CADET BLUE #5F9F9F
DARK BROWN #5C4033
DARK PURPLE #871F78
DUSTY ROSE #856363
GOLD #CD7F32
KHAKI #9F9F5F
NAVY BLUE #23238E
PINK #BC8F8F
SILVER #E6E8FA
TURQUOISE #ADEAEA
RED #FF0000
MAGENTA #FF00FF
BLACK #000000
BRASS #B5A642
BRONZE #8C7853
COPPER #B87333
DARK GREEN #2F4F2F
DARK TAN #97694F
FIREBRICK #8E2323
GREY #C0C0C0
LIME GREEN 32CD32
ORANGE #FF7F00
PLUM #EAADEA
STEEL BLUE #236B8E
VIOLET #4F2F4F
GREEN #00FF00
CYAN #00FFFF
AQUAMARINE #70DB93
BRIGHT GOLD #D9D919
BRONZE II #A67D3D
CORAL #FF7F00
DARK WOOD #855E42
DIM GREY #545454
FOREST GREEN #238E23
INDIAN RED #4E2F2F
MAROON #8E236B
ORCHARD #DB70DB
SCARLET #8C1717
TAN #DB9370
WHEAT #D8D8BF
*/
);

%put Analyses are completed!;
%put Your important vars used by the Lattice_gbed_over_bed_track are as follows:;
%put  chr_var=&gtf_chr_var;
%put st_var=&gtf_st_var;
%put end_var=&gtf_end_var;
%put grp_var=&genevar;
%put scatter_grp_var=gscatter_grp;
%put lattice_subgrp_var=lattice_subgrp;
%put yval_var=y;
%put If you want to use the output dataset &outdsd with the macro Lattice_gscatter_over_bed_track;
%put Please assign the above corresponding variables to these macro variables!;

%mend;

/*Demo codes:;

libname FM 'E:\LongCOVID_HGI_GWAS'; 

%gene_track4gtf(
gtf_dsd=FM.GTF_HG19,
gtf_chr_var=chr,
gtf_st_var=st,
gtf_end_var=end,
chr_value=11, 
minst=119089629, 
maxend=120320656, 
perlrgx4gene=.,
outdsd=out
);


*/
