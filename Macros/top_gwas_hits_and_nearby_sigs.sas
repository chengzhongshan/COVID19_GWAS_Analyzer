%macro top_gwas_hits_and_nearby_sigs(
GWAS_SAS_DSD=,
Marker_Col_Name=,
Marker_Pos_Col_Name=,
Xaxis_Col_Name=,
Yaxis_Col_Name=,
GWAS_dsdout=,
gwas_thrsd=, /*-log10(P) threshold, such as 5*/
Mb_SNPs_Nearby=,/*this Mb_factor will multiple 1,000,000 when running in the program*/
design_width=1000,
design_height=200
);
   %let Marker_Col_Name=%assign_str4missing(Inval=&Marker_Col_Name,NewVal=SNP);
   %let Xaxis_Col_Name=%assign_str4missing(Inval=&Xaxis_Col_Name,NewVal=Chr);
   %let Yaxis_Col_Name=%assign_str4missing(Inval=&Yaxis_Col_Name,NewVal=P);
   %let Marker_Pos_Col_Name=%assign_str4missing(Inval=&Marker_Pos_Col_Name,NewVal=BP);
/*      
   %char2num_dsd(dsdin=&GWAS,
                 vars=&Yaxis_Col_Name &Marker_Pos_Col_Name,
                 dsdout=&GWAS_dsdout);
*/               
   %put Now we are going to keep SNPs &Mb_SNPs_Nearby Mb up/downstream of GWS hits;
   data tops;
   set &GWAS_SAS_DSD;
   where -log10(&Yaxis_Col_Name)>=&gwas_thrsd;
   run;
   
   *Merge these top signals and only keep the most significant signals around specific dist;
   %get_top_signal_within_dist(dsdin=tops
                           ,grp_var=&Xaxis_Col_Name
                           ,signal_var=&Yaxis_Col_Name
                           ,pos_var=&Marker_Pos_Col_Name
                           ,pos_dist_thrshd=&Mb_SNPs_Nearby*1000000
                           ,dsdout=tops);
   proc sql;
   create table &GWAS_dsdout(where=(tmp^="")) as
   select a.*,b.&Marker_Col_Name as tmp
   from &GWAS_SAS_DSD as a
   right join
   tops as b
   on    a.&Xaxis_Col_Name=b.&Xaxis_Col_Name and 
         a.&Marker_Pos_Col_Name between 
         (b.&Marker_Pos_Col_Name-&Mb_SNPs_Nearby*1000000*0.5) and (b.&Marker_Pos_Col_Name+&Mb_SNPs_Nearby*1000000*0.5)
   order by a.&Xaxis_Col_Name,
         a.&Marker_Pos_Col_Name;
         
   data &GWAS_dsdout;
   set &GWAS_dsdout;
/*    drop tmp; */
   run;                 
   *Remove duplicates generated by the above codes;
   proc sort data=&GWAS_dsdout nodupkeys;by _all_;run;
   proc sort data=&GWAS_dsdout;by &Xaxis_Col_Name &Marker_Pos_Col_Name;run;
   *Make manhattan plots for regions with top hits;
   *%manhattan(dsdin=&GWAS_dsdout,pos_var=&Marker_Pos_Col_Name,chr_var=&Xaxis_Col_Name,P_var=&Yaxis_Col_Name,logP=1,gwas_thrsd=&gwas_thrsd);

   *Use proc sgpanel to make local manhattan plots, which are better;
    %scale4range(
      dsdin=&GWAS_dsdout,
      ids=tmp,
      vars=&Marker_Pos_Col_Name,
      factor4mult=1000,
      round_or_not=1,
      outdsd=&GWAS_dsdout
      );
     data &GWAS_dsdout;
     set &GWAS_dsdout;
     logP=-log10(&Yaxis_Col_Name);
     label logP="-log10(P)"
           &Marker_Pos_Col_Name="Relative postion (bp)";
     run;
     data &GWAS_dsdout;
     set &GWAS_dsdout;
     top_tag=0;
     if logP>=&gwas_thrsd then top_tag=1;
     if tmp=&Marker_Col_Name then top_tag=2;
/*
     proc sort data=&GWAS_dsdout;by tmp logP;
     data &GWAS_dsdout;
     set &GWAS_dsdout;
     if last.tmp then do;
        top_tag=2;
     end;
     by tmp;
*/
     
    *Make a panel of plots with the same xaxis;
    ods graphics /height=&design_height.px width=&design_width.px;
     proc sgpanel data=&GWAS_dsdout;
     panelby tmp/layout=columnlattice onepanel novarname;
     scatter x=&Marker_Pos_Col_Name y=logP/group=top_tag markerattrs=(symbol=circlefilled size=6) name="sc";
     refline &gwas_thrsd/axis=y lineattrs=(color=darkred pattern=thindot);
     rowaxis display=(noticks);
     run;   
%mend;

/*Demo:

*options mprint mlogic symbolgen;
%let macrodir=/home/cheng.zhong.shan/Macros;
%include "&macrodir/importallmacros_ue.sas";
%importallmacros_ue;

libname FM '/home/cheng.zhong.shan/my_shared_file_links/cheng.zhong.shan/F_vs_M_Covid19_Hosp';
*options mprint mlogic symbolgen;

%top_gwas_hits_and_nearby_sigs(
GWAS_SAS_DSD=FM.f_vs_m_mixedpop,
Marker_Col_Name=rsid,
Marker_Pos_Col_Name=pos,
Xaxis_Col_Name=chr,
Yaxis_Col_Name=pval,
GWAS_dsdout=xxx,
gwas_thrsd=5.5,
Mb_SNPs_Nearby=0.1,
design_width=1000,
design_height=200
);
*/
