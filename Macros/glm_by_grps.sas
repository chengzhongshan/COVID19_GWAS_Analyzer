%macro glm_by_grps(
dsd=tgt,/*Long format data for proc glm*/
grpvars=rownames cluster,
yvar4glm=exp,/*var in the dsd for proc glm*/
GLMStatOutDsd=GLMStatOut,
GLM_classes=sex medication severity,
GLM_model=severity sex age medication,
pheno_var=severity, /*var for lsmeans analysis in proc glm*/
where_condition=,
exp_cutoff=0.5 /*lsmean expression cutoff for lowly expressed genes
These genes should be excluded in the differential expression analysis!*/
);

proc sort data=&dsd;by &grpvars;
run;
/* ods trace on; */
ods select none;
*Note: &GLMStatOutDsd._lsmeans can be used to filter the comparisons based on gene expression;
*If the mean of gene expression is extremely low, we do not need to consider its significantly;
*differential expression p values;
ods output ModelANOVA=&GLMStatOutDsd DIFF=&GLMStatOutDsd._pdiff 
lsmeans=&GLMStatOutDsd._lsmeans;
proc glm data=&dsd PLOTS(MAXPOINTS=50000000000);
%if %length("&where_condition")>0 %then %do;
where &where_condition;
%end;
/* class sex medication severity; */
class &GLM_classes;
/* model exp=severity sex age medication/ss3; */
model &yvar4glm= &GLM_model/ss3;
lsmeans &pheno_var/pdiff=all adjust=tukey; 
by &grpvars;
run;

/* ods trace off; */
ods select all;
data &GLMStatOutDsd;
set &GLMStatOutDsd;
keep &grpvars source df ss ms fvale probF;
attrib probF format=best12.;
run;

data &GLMStatOutDsd._pdiff;
set &GLMStatOutDsd._pdiff;
*As sas output numeric variable names for these p values;
*It is impossible to use attrib to change them;
attrib _numeric_ format=best32.;
run;

*Get the total number of groups for lsmeans;
*Use these numbers to filter pdiff dataset;
proc sql noprint;
select max(rowname) into: lsmnum
from &GLMStatOutDsd._pdiff;
title "LSMEANs gene expression among different groups failed the cutoff of &exp_cutoff";
proc sql;
create table &GLMStatOutDsd._lsmeans1 as
select *
from &GLMStatOutDsd._lsmeans
group by %sysfunc(prxchange(s/ /%str(,)/,-1,&grpvars))
having max(lsmean)<&exp_cutoff;
proc print data=&GLMStatOutDsd._lsmeans1;
where lsmean<&exp_cutoff;
%print_nicer;
run;

%let ngrps=%ntokens(&grpvars);
*Filter out these lowly expressed genes from GLMStatOutDsd;
proc sql;
create table &GLMStatOutDsd(where=(QCedTag=1)) as 
select a.*,missing(b.%scan(&grpvars,1,%str( ))) as QCedTag
from &GLMStatOutDsd as a
left join
(select distinct 
      %do ggi=1 %to &ngrps;
        %scan(&grpvars,&ggi,%str( ))
        %if (&ngrps>1 and &ggi<&ngrps) %then %do;
         %str(,)
         %end;
      %end;
     from &GLMStatOutDsd._lsmeans1) as b
on
%do ggi=1 %to &ngrps;
 a.%scan(&grpvars,&ggi,%str( )) =  b.%scan(&grpvars,&ggi,%str( ))
 %if (&ngrps>1 and &ggi<&ngrps) %then %do;
    and
 %end; 
%end;
;
data &GLMStatOutDsd;
set &GLMStatOutDsd;
drop QCedTag;
run;

title "LSMEANs tukey differential expression analysis for highly expressed genes with any p<=0.05 among different groups";
*Filter these lowly expressed genes from &GLMStatOutDsd._pdiff;
proc sql;
create table &GLMStatOutDsd._pdiff_qced(where=(QCedTag=1)) as 
select a.*,missing(b.%scan(&grpvars,1,%str( ))) as QCedTag
from &GLMStatOutDsd._pdiff as a
left join
(select distinct 
      %do ggi=1 %to &ngrps;
        %scan(&grpvars,&ggi,%str( ))
        %if (&ngrps>1 and &ggi<&ngrps) %then %do;
         %str(,)
         %end;
      %end;
     from &GLMStatOutDsd._lsmeans1) as b
on
%do ggi=1 %to &ngrps;
 a.%scan(&grpvars,&ggi,%str( )) =  b.%scan(&grpvars,&ggi,%str( ))
 %if (&ngrps>1 and &ggi<&ngrps) %then %do;
    and
 %end; 
%end;
;

data &GLMStatOutDsd._pdiff_qced;
set &GLMStatOutDsd._pdiff_qced;
where 
%do li=1 %to &lsmnum;
 ("&li"n > 0 and "&li"n <= 0.05)
 %if (&lsmnum>1 and &li<&lsmnum) %then %do;
   or
 %end;
%end;
;
proc print;
%print_nicer;
run;

title "LSMEANs tukey differential expression analysis for highly expressed genes with any p<=0.001 among different groups";
data &GLMStatOutDsd._pdiff_qced_001;
set &GLMStatOutDsd._pdiff_qced;
where 
%do li=1 %to &lsmnum;
 ("&li"n > 0 and "&li"n <= 0.001)
 %if (&lsmnum>1 and &li<&lsmnum) %then %do;
   or
 %end;
%end;
;
proc print;
%print_nicer;
run;



%mend;

/*Demo code:

%let macrodir=/home/cheng.zhong.shan/Macros;
%include "&macrodir/importallmacros_ue.sas";
%importallmacros_ue;
libname sc "/home/cheng.zhong.shan/data";

*The input tgt dataset can be generated by the macro Boxplots4GenesInGTExV8ByGrps;
*options mprint mlogic symbolgen;
%glm_by_grps(
dsd=tgt,
grpvars=rownames cluster,
yvar4glm=exp,
GLMStatOutDsd=GLMStatOut,
GLM_classes=AA,
GLM_model=AA,
pheno_var=AA, 
where_condition=
);

*Make heatmap;
data dsd4heatmap (keep=rownames cluster logP);
set GLMStatOut;
logP=-log10(probF);
*if logP<-log10(0.05/(12*21)) then logp=.;
if logP<2 then logp=.;
if logP>50 then logP=50;
cluster=prxchange('s/[\W\s]+/_/',-1,cluster);
cluster=prxchange('s/_\b//',-1,cluster);
where source="AA" and
Cluster not contains 'Outlier';
label Cluster="Tissue types" rownames="Genes"
logP="ANOVA -log10(P)";
run;
 
%heatmap4longformatdsd(
dsdin=dsd4heatmap,
xvar=rownames,
yvar=Cluster,
colorvar=logP,
fig_height=1500,
fig_width=800,
outline_thickness=2
);

*/


